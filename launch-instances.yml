# launch-instances.yml

---
- hosts: local
  connection: local
  gather_facts: False

  vars_files:
    - vars.yml

  tasks:
    - name: Create a security group
      ec2_group:
        name: "{{ security_group }}"
        description: The webservers security group
        region: "{{ region }}"
        aws_access_key: "{{ aws_access_key_id }}"
        aws_secret_key: "{{ aws_secret_access_key }}"
        rules:
          - proto: tcp
            from_port: 22
            to_port: 22
            cidr_ip: 0.0.0.0/0
          - proto: tcp
            from_port: 80
            to_port: 80
            cidr_ip: 0.0.0.0/0
        rules_egress:
          - proto: all
            cidr_ip: 0.0.0.0/0

    - name: Launch webserver 1
      ec2:
        aws_access_key: "{{ aws_access_key_id }}"
        aws_secret_key: "{{ aws_secret_access_key }}"
        group: "{{ security_group }}"
        instance_type: "{{ instance_type }}"
        image: "{{ image }}"
        wait: true 
        region: "{{ region }}"
        keypair: "{{ keypair }}"
        count: "{{ count }}"
        vpc_subnet_id: "{{ subnet1_id }}"
      register: ec2

    - name: Add tags to Instance 1
      ec2_tag:
        aws_access_key: "{{ aws_access_key_id }}"
        aws_secret_key: "{{ aws_secret_access_key }}"
        resource: "{{ item.id }}" 
        region: "{{ region }}" 
        state: "present"
      with_items: "{{ ec2.instances }}"
      args:
        tags:
          Type: webserver
          Project: flux7-trial
          Name: flux7-trial-server-1      

    - name: Add instance 1 to the local host group
      local_action: lineinfile 
                    path=./hosts
                    regexp={{ item.public_ip }} 
                    insertafter="[webservers]" line={{ item.public_ip }}
      with_items: '{{ec2.instances}}'            

    - name: Launch webserver 2
      ec2:
        aws_access_key: "{{ aws_access_key_id }}"
        aws_secret_key: "{{ aws_secret_access_key }}"
        group: "{{ security_group }}"
        instance_type: "{{ instance_type }}"
        image: "{{ image }}"
        wait: true 
        region: "{{ region }}"
        keypair: "{{ keypair }}"
        count: "{{count}}"
        vpc_subnet_id: "{{subnet2_id}}"
      register: ec2

    - name: Add tags to Instance 2
      ec2_tag:
        aws_access_key: "{{ aws_access_key_id }}"
        aws_secret_key: "{{ aws_secret_access_key }}"
        resource: "{{ item.id }}" 
        region: "{{ region }}" 
        state: "present"
      with_items: "{{ ec2.instances }}"
      args:
        tags:
          Type: webserver
          Project: flux7-trial
          Name: flux7-trial-server-2      

    - name: Add instance 2 to the local host group
      local_action: lineinfile 
                    path=./hosts
                    regexp={{ item.public_ip }} 
                    insertafter="[webservers]" line={{ item.public_ip }}
      with_items: '{{ec2.instances}}'      

    - name: Launch webserver 3
      ec2:
        aws_access_key: "{{ aws_access_key_id }}"
        aws_secret_key: "{{ aws_secret_access_key }}"
        group: "{{ security_group }}"
        instance_type: "{{ instance_type }}"
        image: "{{ image }}"
        wait: true 
        region: "{{ region }}"
        keypair: "{{ keypair }}"
        count: "{{count}}"
        vpc_subnet_id: "{{subnet3_id}}"
      register: ec2

    - name: Add tags to Instance 3
      ec2_tag:
        aws_access_key: "{{ aws_access_key_id }}"
        aws_secret_key: "{{ aws_secret_access_key }}"
        resource: "{{ item.id }}" 
        region: "{{ region }}" 
        state: "present"
      with_items: "{{ ec2.instances }}"
      args:
        tags:
          Type: webserver
          Project: flux7-trial
          Name: flux7-trial-server-3      

    - meta: refresh_inventory

    - name: Add instance 3 to the local host group
      local_action: lineinfile 
                    path=./hosts
                    regexp={{ item.public_ip }} 
                    insertafter="[webservers]" line={{ item.public_ip }}
      with_items: '{{ec2.instances}}'      

    # - name: Wait for SSH to come up
    #   wait_for:
    #     host: "{{ item.public_ip }}"
    #     port: 22 
    #     state: started 
    #   with_items: "{{ ec2.instances }}"